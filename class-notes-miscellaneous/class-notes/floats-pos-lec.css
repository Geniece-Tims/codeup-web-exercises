<!--/*float: !* provides the ability to have an element break free from the normal document. */-->
<!--/*<!DOCTYPE html>*/-->
<!--/*<html>*/-->
<!--/*<head>*/-->
<!--/*<title>Floats Example</title>*/-->
<!--/*    <style>*/-->
<!--/*        #container {*/-->
<!--/*            margin: 50px auto;*/-->
<!--/*            width: 500px;*/-->
<!--/*            border: 1px solid #000;*/-->
<!--/*            padding: 10px;*/-->
<!--/*        }*/-->
<!--/*        #box1 {*/-->
<!--/*            background-color: #77AF00; !* greenish *!*/-->
<!--/*height: 100px;*/-->
<!--/*width: 100px;*/-->
<!--/*margin: 10px;*/-->
<!--/*}*/-->
<!--/*#box2 {*/-->
<!--/*    background-color: #1969B2; !* blueish *!*/-->
<!--/*    height: 150px;*/-->
<!--/*    width: 150px;*/-->
<!--/*    margin: 10px;*/-->
<!--/*}*/-->
<!--/*</style>*/-->
<!--/*</head>*/-->
<!--/*<body>*/-->
<!--/*<div id="container">*/-->
<!--/*<div id="box1"></div>*/-->
<!--/*<div id="box2"></div>*/-->
<!--/*<p>*/-->
<!--/* Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do*/-->
<!--/*eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut*/-->
<!--/*enim ad minim veniam, quis nostrud exercitation ullamco laboris*/-->
<!--/*nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor*/-->
<!--/*in reprehenderit in voluptate velit esse cillum dolore eu fugiat*/-->
<!--/*nulla pariatur. Excepteur sint occaecat cupidatat non proident,*/-->
<!--/* sunt in culpa qui officia deserunt mollit anim id est laborum.*/-->
<!--/*</p>*/-->
<!--/*</div>*/-->
<!--/*</body>*/-->
<!--/*</html>*/-->
<!--/*__________________________________________________________________________________________________________________________*/-->
<!--/* The "clear" property allows us to have content "clear" or move below elements that are floated to either the left, right, or both (either left or right).*/-->
<!--/* The default positioning for elements is referred to as static. This just means that the element will be rendered in order with the normal flow of the document. When elements that have a position property set to something other than static, there are a few other properties that become applicable. These properties are top, left, bottom, and right.*/-->
<!--/* The top, left, bottom, and right properties can be assigned pixel values to describe how far away from the corresponding position the box for the target element will be displayed. These properties will have no impact on an element with the default position:static.*/-->
<!--/* By assigning the property value position:relative to an element, you enable the top, left, bottom, right properties. When used with a relatively positioned element, these properties will shift the element from its normal position by the amount specified. Let's see an example:-->
<!--<!DOCTYPE html>-->
<!--<html>-->
<!--<head>-->
<!--<title>Relative Positioning</title>-->
<!--    <style>-->
<!--        #container {-->
<!--            margin: 50px auto;-->
<!--            width: 500px;-->
<!--            height: 200px;-->
<!--            border: 1px solid #000;-->
<!--        }-->
<!--        .box {-->
<!--            background-color: #1969B2;-->
<!--            height: 100px;-->
<!--            width: 100px;-->
<!--            position: relative;-->
<!--            top: 10px;-->
<!--            right: 10px;-->
<!--        }-->
<!--    </style>-->
<!--</head>-->
<!--<body>-->
<!--    <div id="container">-->
<!--        <div class="box"></div>-->
<!--    </div>-->
<!--</body>-->
<!--</html>-->
<!--*/-->
<!--/*_________________________________________________________________________________________________________________________*/-->
<!--/* Another type of positioning is absolute. Once again, by assigning the property value position:absolute to an element, you enable the top, left, bottom, right properties, however, the properties work differently in this case.-->

<!--If an absolutely positioned element is in a relatively positioned container, the top, left, bottom, right property values will be relative to the relatively positioned container. If the absolutely positioned element is not in a relatively positioned container, the top, left, bottom, right property values will have no effect.-->
<!--<!DOCTYPE html>-->
<!--<html>-->
<!--<head>-->
<!--    <title>Absolute Positioning</title>-->
<!--    <style>-->
<!--    #container {-->
<!--        margin: 50px auto;-->
<!--        width: 500px;-->
<!--        height: 200px;-->
<!--        border: 1px solid #000;-->
<!--        position: relative;-->
<!--    }-->
<!--    .box {-->
<!--        background-color: #1969B2;-->
<!--        height: 100px;-->
<!--        width: 100px;-->
<!--        position: absolute;-->
<!--        top: 10px;-->
<!--        right: 10px;-->
<!--    }-->
<!--    </style>-->
<!--</head>-->
<!--<body>-->
<!--    <div id="container">-->
<!--        <div class="box"></div>-->
<!--    </div>-->
<!--</body>-->
<!--</html>-->
<!--*/-->
<!--/*_________________________________________________________________________________________________________________________*/-->
<!--/* One more type of positioning to discuss is fixed positioning. Have you ever seen page elements that do not move even when the page is scrolled? These elements have position:fixed applied, which causes them to be positioned relative to the browser window.-->
<!--<!DOCTYPE html>-->
<!--<html>-->
<!--<head>-->
<!--    <title>Fixed Positioning</title>-->
<!--    <style>-->
<!--        #container {-->
<!--            margin: 50px auto;-->
<!--            width: 500px;-->
<!--            height: 2000px;-->
<!--            border: 1px solid #000;-->
<!--        }-->
<!--        .box {-->
<!--            background-color: #1969B2;-->
<!--            height: 100px;-->
<!--            width: 100px;-->
<!--            position: fixed;-->
<!--            top: 10px;-->
<!--            right: 10px;-->
<!--        }-->
<!--    </style>-->
<!--</head>-->
<!--<body>-->
<!--<div id="container">-->
<!--    <div class="box"></div>-->
<!--</div>-->
<!--</body>-->
<!--</html>-->
<!--*/-->